<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jekyll, | ギッハブる日記]]></title>
  <link href="http://mattn.github.com/blog/blog/categories/jekyll-/atom.xml" rel="self"/>
  <link href="http://mattn.github.com/blog/"/>
  <updated>2011-10-21T20:56:47+09:00</updated>
  <id>http://mattn.github.com/blog/</id>
  <author>
    <name><![CDATA[mattn]]></name>
    <email><![CDATA[mattn.jp@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopressのコードブロックでutf-8が使えないのが直った]]></title>
    <link href="http://mattn.github.com/blog/2011/10/21/octopress-pygments-utf8/"/>
    <updated>2011-10-21T00:00:00+09:00</updated>
    <id>http://mattn.github.com/blog/2011/10/21/octopress-pygments-utf8</id>
    <content type="html"><![CDATA[<p>いままで</p>

<p><code>
&amp;#96;&amp;#96;&amp;#96; ruby
def foo
  # 母さん元気ですか？僕は元気です
end
&amp;#96;&amp;#96;&amp;#96;
</code></p>

<p>みたいなのがエラーで動かなかったんだけど、今日の修正で直ったみたい。</p>

<p><code>ruby
def foo?
  # 母さん元気ですか？僕は元気です
end
</code></p>

<p>ただ、windowsだとpygmentsがちゃんと動かなくて、追ってみると</p>

<p><code>``text
C:/Ruby192/lib/ruby/gems/1.9.1/gems/ffi-1.0.9-x86-mingw32/lib/ffi/library.rb:75:in</code>block in ffi_lib': Could not open library '.dll': 指定されたモジュールが見つ (LoadError)</p>

<pre><code>    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/ffi-1.0.9-x86-mingw32/lib/ffi/library.rb:54:in `map'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/ffi-1.0.9-x86-mingw32/lib/ffi/library.rb:54:in `ffi_lib'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rubypython-0.5.1/lib/rubypython/python.rb:29:in `&lt;module:Python&gt;'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rubypython-0.5.1/lib/rubypython/python.rb:21:in `&lt;top (required)&gt;'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rubypython-0.5.1/lib/rubypython.rb:261:in `load'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rubypython-0.5.1/lib/rubypython.rb:261:in `reload_library'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rubypython-0.5.1/lib/rubypython.rb:104:in `start'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/pygments.rb-0.1.3/lib/pygments/ffi.rb:8:in `start'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/pygments.rb-0.1.3/lib/pygments/ffi.rb:82:in `highlight'
    from C:/temp/github/octopress/plugins/pygments_code.rb:24:in `pygments'        from C:/temp/github/octopress/plugins/pygments_code.rb:14:in `highlight'
    from C:/temp/github/octopress/plugins/backtick_code_block.rb:37:in `block in render_code_block'
    from C:/temp/github/octopress/plugins/backtick_code_block.rb:13:in `gsub'
    from C:/temp/github/octopress/plugins/backtick_code_block.rb:13:in `render_code_block'
    from C:/temp/github/octopress/plugins/octopress_filters.rb:12:in `pre_filter'
    from C:/temp/github/octopress/plugins/octopress_filters.rb:27:in `pre_render'
    from C:/temp/github/octopress/plugins/post_filters.rb:112:in `block in pre_render'
    from C:/temp/github/octopress/plugins/post_filters.rb:111:in `each'
    from C:/temp/github/octopress/plugins/post_filters.rb:111:in `pre_render'
    from C:/temp/github/octopress/plugins/post_filters.rb:166:in `do_layout'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/lib/jekyll/post.rb:189:in `render'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/lib/jekyll/site.rb:193:in `block in render'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/lib/jekyll/site.rb:192:in `each'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/lib/jekyll/site.rb:192:in `render'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/lib/jekyll/site.rb:40:in `process'
    from C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.0/bin/jekyll:250:in `&lt;top (required)&gt;'
    from C:/Ruby192/bin/jekyll:19:in `load'
    from C:/Ruby192/bin/jekyll:19:in `&lt;main&gt;'
</code></pre>

<p>```</p>

<p>どうやらpygmentsが使うpythonのdllが見つからないっぽい。でrubypythonを見てみると、ちゃんとpython27.dllのパスを探せてない。パッチ書こうと思ったら既にあった</p>

<p><blockquote><p>Prefix. I have never written a line of Ruby before so please fix/improve where needed.<br/>Super basic support, this doesn't clean up the errors from the Windows Python not liking the order of quote when being called. It wants " then '<br/>This does allow windows users to get by.<br/>I'm not very familiar with Bitbucket or Hg so I hope you don't mind my use of GitHub and Git.</p><footer><strong>github</strong><cite><a href='https://github.com/halostatue/rubypython/pull/1'>Super Basic Support for Windows Python</a></cite></footer></blockquote></p>

<p>早く取り込んでよ。8月のだよ。で動かしてみたけど読み込めない。調べたら、python27.dllは<code>c:\python27\libs\python27.dll</code>でも<code>c:\python27\python27.dll</code>でもなく、<code>c:\windows\system32\python27.dll</code>なんて所に入ってた。f&#42;ckインストーラ！
こういうのは動かすと必ず問題が起きるので<code>c:\python27\libs\python27.dll</code>にコピーした。
ようやくちゃんと動いた。</p>

<p>快適。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「githubとjekyllとoctopressで作る簡単でモダンなブログ」をmarkdownで書き直してみた]]></title>
    <link href="http://mattn.github.com/blog/2011/10/18/octopress-awesome/"/>
    <updated>2011-10-18T00:00:00+09:00</updated>
    <id>http://mattn.github.com/blog/2011/10/18/octopress-awesome</id>
    <content type="html"><![CDATA[<p>自分で書いた記事だけど...</p>

<p><blockquote><p>以前、「jekyllで始める簡単ブログ」という記事を書いたのですが...</p><footer><strong>Big Sky</strong><cite><a href='http://mattn.kaoriya.net/software/lang/ruby/20111017205717.htm'>Githubとjekyllとoctopressで作る簡単でモダンなブログ</a></cite></footer></blockquote></p>

<p>を実際にoctopressで書くと、どんな感じかやってみた。
まぁblosxomのテキストをmarkdownに書き直しただけなんですが。
一番下に、markdownにした場合のテキストを貼り付けてあります。</p>

<hr />

<p>以前、「jekyllで始める簡単ブログ」という記事を書いたのですが</p>

<p><blockquote><p>GithubのユーザページでJekyllが使われる様になりました。 GitHub Pages Upgraded to Jekyll 0.5.0 - GitHub I just released Jek...</p><footer><strong>Big Sky</strong><cite><a href='http://mattn.kaoriya.net/software/lang/ruby/20090409185248.htm'>Big Sky :: Jekyllで始める簡単ブログ</a></cite></footer></blockquote></p>

<p>octopressというのを使うともっと簡単に出来る事が分かった。</p>

<p><blockquote><p>Octopress is a framework designed by Brandon Mathis for Jekyll , the blog aware static site generato...</p><footer><strong>Ocotopress</strong><cite><a href='http://octopress.org'>Octopress</a></cite></footer></blockquote></p>

<p><blockquote><p>What is Octopress? Octopress is Jekyll blogging at its finest. Octopress sports a clean responsive t...</p><footer><strong>image/octopress</strong><cite><a href='https://github.com/imathis/octopress'>Imathis/octopress - GitHub</a></cite></footer></blockquote></p>

<p>以下簡単な手順を示す。
このgithubリポジトリは基本的に、1ブログに対して1つcloneする。cloneしたら</p>

<p>```</p>

<h1>rake install</h1>

<p>```</p>

<p>する。octopressをシステムにインストールのではなく、このブログ用リポジトリにsassテーマをキャッシュさせる為の設定を行うだけなので安心してやって貰ってok。
次にgithubにブログを作るのであれば</p>

<p>```</p>

<h1>rake setup_github_pages</h1>

<p>```</p>

<p>を実行し、読み取り書き込み権限のあるgit URLを貼り付けて完了。
Windowsの場合はちょっとここで修正が必要で、<code>config.rb</code>とか<code>Rakefile</code>に変なパスが書かれているので直す。実際には<code>public/c:/path/to/public...</code>みたいなフルパスが重なっているはずなので<code>public...</code>に直せばok。
これについては時間があったらパッチ書いてpull requestを送るつもり。</p>

<p>さて、これでブログを書く準備が出来ました。簡単すぎますね！</p>

<p>試しに<code>source/_posts/2011-10-17-github-jekyll.mkd</code>というmarkdownのファイルを作ります。中身は以前ご紹介した内容と変わりませんが、ocotopressは幾らか拡張プラグインが入っているので色んな書き方が出来ます。
例えばgist tagプラグインを使って</p>

<h2>```</h2>

<p>layout: post
title: "githubとjekyllとoctopressで作るブログ"
date: 2011-07-03 5:59
comments: true</p>

<h2>categories:</h2>

<p>便利すぎる...</p>

<p>{&#37; gist 1292428 &#37;}
```</p>

<p>こう書いて</p>

<p>```</p>

<h1>rake gen_deploy</h1>

<p>```</p>

<p>すると</p>

<p>こんな記事が出来上がります。dateはファイル名じゃなくてdateの方が(設定されていれば)優先されるみたいですね。以後は記事を書いて<code>rake den_deploy</code>するだけの簡単なお仕事です。
他にも、imageタグや、haml形式入力、html5 videoタグなど、色んなプラグインがあります。また、sassフォルダ内にあるsassファイルを弄れば簡単しかも柔軟なCSSを吐き出せます。
なお、<code>_config.xml</code>を弄ってタイトルやサブタイトル、githubアカウント、twitterアカウントなんかを設定すると上述の様なサイトが簡単に出来上がります。</p>

<p>```</p>

<h1>-----------------------</h1>

<h1>Main Configs</h1>

<h1>-----------------------</h1>

<p>url: http://mattn.github.com/blog
title: "ギッハブる日記"
subtitle: ギッハブで作る開発日誌
author: mattn
```</p>

<p>気をつけておいて欲しいのは、github/jekyllはCGIで動いている訳じゃなくて、octopressが静的コンテンツを生成しているので、記事をアップする環境に依存する事。まぁここはbundleを使っているのでOSさえ変わらなければ大丈夫かと思います。Windowsからでも既述の様な修正を入れれば使えています。無料のgithubで簡単にしかもモダンなブログサイトを作りたい方は、一考してみてはどうでしょうか。</p>

<hr />

<p>以上が本文、でこのmarkdownのソースは以下。</p>

<p><div><script src='https://gist.github.com/1295049.js?file='></script>
<noscript><pre><code>以前、「jekyllで始める簡単ブログ」という記事を書いたのですが

{% blockquote Big Sky http://mattn.kaoriya.net/software/lang/ruby/20090409185248.htm Big Sky :: Jekyllで始める簡単ブログ %}
GithubのユーザページでJekyllが使われる様になりました。 GitHub Pages Upgraded to Jekyll 0.5.0 - GitHub I just released Jek...
{% endblockquote %}

octopressというのを使うともっと簡単に出来る事が分かった。

{% blockquote Ocotopress http://octopress.org Octopress %}
Octopress is a framework designed by Brandon Mathis for Jekyll , the blog aware static site generato...
{% endblockquote %}

{% blockquote image/octopress https://github.com/imathis/octopress imathis/octopress - GitHub %}
What is Octopress? Octopress is Jekyll blogging at its finest. Octopress sports a clean responsive t...
{% endblockquote %}

以下簡単な手順を示す。
このgithubリポジトリは基本的に、1ブログに対して1つcloneする。cloneしたら

```
# rake install
```

する。octopressをシステムにインストールのではなく、このブログ用リポジトリにsassテーマをキャッシュさせる為の設定を行うだけなので安心してやって貰ってok。
次にgithubにブログを作るのであれば

```
# rake setup_github_pages
```

を実行し、読み取り書き込み権限のあるgit URLを貼り付けて完了。
Windowsの場合はちょっとここで修正が必要で、`config.rb`とか`Rakefile`に変なパスが書かれているので直す。実際には`public/c:/path/to/public...`みたいなフルパスが重なっているはずなので`public...`に直せばok。
これについては時間があったらパッチ書いてpull requestを送るつもり。

さて、これでブログを書く準備が出来ました。簡単すぎますね！

試しに`source/_posts/2011-10-17-github-jekyll.mkd`というmarkdownのファイルを作ります。中身は以前ご紹介した内容と変わりませんが、ocotopressは幾らか拡張プラグインが入っているので色んな書き方が出来ます。
例えばgist tagプラグインを使って

```
---
layout: post
title: &quot;githubとjekyllとoctopressで作るブログ&quot;
date: 2011-07-03 5:59
comments: true
categories:
---
便利すぎる...

{&amp;#37; gist 1292428 &amp;#37;}
```

こう書いて

```
# rake gen_deploy
```

すると

こんな記事が出来上がります。dateはファイル名じゃなくてdateの方が(設定されていれば)優先されるみたいですね。以後は記事を書いて&lt;code&gt;rake den_deploy&lt;/code&gt;するだけの簡単なお仕事です。
他にも、imageタグや、haml形式入力、html5 videoタグなど、色んなプラグインがあります。また、sassフォルダ内にあるsassファイルを弄れば簡単しかも柔軟なCSSを吐き出せます。
なお、`_config.xml`を弄ってタイトルやサブタイトル、githubアカウント、twitterアカウントなんかを設定すると上述の様なサイトが簡単に出来上がります。

```
# ----------------------- #
#      Main Configs       #
# ----------------------- #

url: http://mattn.github.com/blog
title: &quot;ギッハブる日記&quot;
subtitle: ギッハブで作る開発日誌
author: mattn
```

気をつけておいて欲しいのは、github/jekyllはCGIで動いている訳じゃなくて、octopressが静的コンテンツを生成しているので、記事をアップする環境に依存する事。まぁここはbundleを使っているのでOSさえ変わらなければ大丈夫かと思います。Windowsからでも既述の様な修正を入れれば使えています。無料のgithubで簡単にしかもモダンなブログサイトを作りたい方は、一考してみてはどうでしょうか。
</code></pre></noscript></div>
</p>

<p>しかしgist tagプラグイン便利だ。</p>
]]></content>
  </entry>
  
</feed>
